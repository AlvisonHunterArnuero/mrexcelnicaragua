{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/alvisonhunter/Documents/NEXT JS/misterExcelNicaragua/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport Layout from \"../components/layout\";\nimport { motion } from \"framer-motion\";\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      router = _ref.router;\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(motion.div, {\n    key: router.route,\n    initial: \"pageInitial\",\n    animate: \"pageAnimate\",\n    variants: {\n      pageInitial: {\n        opacity: 0\n      },\n      pageAnimate: {\n        opacity: 1\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }))));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/alvisonhunter/Documents/NEXT JS/misterExcelNicaragua/pages/_app.js"],"names":["Layout","motion","MyApp","Component","pageProps","router","route","pageInitial","opacity","pageAnimate"],"mappings":";;;;AAAA;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,SAASC,KAAT,OAAiD;AAAA,MAAhCC,SAAgC,QAAhCA,SAAgC;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC/C,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,GAAG,EAAEA,MAAM,CAACC,KADd;AAEE,IAAA,OAAO,EAAC,aAFV;AAGE,IAAA,OAAO,EAAC,aAHV;AAIE,IAAA,QAAQ,EAAE;AACRC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAE;AADE,OADL;AAIRC,MAAAA,WAAW,EAAE;AACXD,QAAAA,OAAO,EAAE;AADE;AAJL,KAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,MAAC,SAAD,eAAeJ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbF,CADF,CADF;AAmBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAhCSF,K;AAkCT,eAAeA,KAAf","sourcesContent":["// import App from 'next/app'\nimport Layout from \"../components/layout\";\nimport { motion } from \"framer-motion\";\n\nfunction MyApp({ Component, pageProps, router }) {\n  return (\n    <Layout>\n      <motion.div\n        key={router.route}\n        initial=\"pageInitial\"\n        animate=\"pageAnimate\"\n        variants={{\n          pageInitial: {\n            opacity: 0,\n          },\n          pageAnimate: {\n            opacity: 1,\n          },\n        }}\n      >\n        <Component {...pageProps} />\n      </motion.div>\n    </Layout>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}